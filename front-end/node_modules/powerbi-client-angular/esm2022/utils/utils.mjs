// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * Get JSON string representation of the given map.
 *
 * @param map Map of event and corresponding handler method
 *
 */
export const stringifyMap = (map) => {
    // Return empty string for empty/null map
    if (!map) {
        return '';
    }
    // Get entries of map as array
    const mapEntries = Array.from(map);
    // Return JSON string
    return JSON.stringify(mapEntries.map((mapEntry) => 
    // Convert event handler method to a string containing its source code for comparison
    [mapEntry[0], mapEntry[1] ? mapEntry[1].toString() : '']));
};
/**
 * Check if the container element, access token, and embed URL are available.
 *
 * @param containerRef Reference to the container element
 * @param embedConfig Configuration object for the embed, containing access token and embed URL
 *
 */
export const isEmbedSetupValid = (containerRef, embedConfig) => {
    return !!containerRef.nativeElement && !!embedConfig.accessToken && !!embedConfig.embedUrl;
};
// SDK information to be used with service instance
export const sdkType = 'powerbi-client-angular';
export const sdkWrapperVersion = '5.0.0';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvdXRpbHMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsdUNBQXVDO0FBQ3ZDLGtDQUFrQztBQUtsQzs7Ozs7R0FLRztBQUNILE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxDQUFDLEdBQWlELEVBQVUsRUFBRTtJQUN4Rix5Q0FBeUM7SUFDekMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ1QsT0FBTyxFQUFFLENBQUM7SUFDWixDQUFDO0lBRUQsOEJBQThCO0lBQzlCLE1BQU0sVUFBVSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFbkMscUJBQXFCO0lBQ3JCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FDbkIsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFFBQVEsRUFBRSxFQUFFO0lBQzFCLHFGQUFxRjtJQUNyRixDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQ3pELENBQ0YsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGOzs7Ozs7R0FNRztBQUNILE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLENBQUMsWUFBd0MsRUFBRSxXQUFnQixFQUFXLEVBQUU7SUFDdkcsT0FBTyxDQUFDLENBQUMsWUFBWSxDQUFDLGFBQWEsSUFBSSxDQUFDLENBQUMsV0FBVyxDQUFDLFdBQVcsSUFBSSxDQUFDLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQztBQUM3RixDQUFDLENBQUE7QUFFRCxtREFBbUQ7QUFDbkQsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLHdCQUF3QixDQUFDO0FBQ2hELE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLE9BQU8sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxyXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcblxyXG5pbXBvcnQgeyBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEV2ZW50SGFuZGxlciB9IGZyb20gJy4uL2NvbXBvbmVudHMvcG93ZXJiaS1lbWJlZC9wb3dlcmJpLWVtYmVkLmNvbXBvbmVudCc7XHJcblxyXG4vKipcclxuICogR2V0IEpTT04gc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBnaXZlbiBtYXAuXHJcbiAqXHJcbiAqIEBwYXJhbSBtYXAgTWFwIG9mIGV2ZW50IGFuZCBjb3JyZXNwb25kaW5nIGhhbmRsZXIgbWV0aG9kXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgY29uc3Qgc3RyaW5naWZ5TWFwID0gKG1hcDogTWFwPHN0cmluZywgRXZlbnRIYW5kbGVyIHwgbnVsbD4gfCB1bmRlZmluZWQpOiBzdHJpbmcgPT4ge1xyXG4gIC8vIFJldHVybiBlbXB0eSBzdHJpbmcgZm9yIGVtcHR5L251bGwgbWFwXHJcbiAgaWYgKCFtYXApIHtcclxuICAgIHJldHVybiAnJztcclxuICB9XHJcblxyXG4gIC8vIEdldCBlbnRyaWVzIG9mIG1hcCBhcyBhcnJheVxyXG4gIGNvbnN0IG1hcEVudHJpZXMgPSBBcnJheS5mcm9tKG1hcCk7XHJcblxyXG4gIC8vIFJldHVybiBKU09OIHN0cmluZ1xyXG4gIHJldHVybiBKU09OLnN0cmluZ2lmeShcclxuICAgIG1hcEVudHJpZXMubWFwKChtYXBFbnRyeSkgPT5cclxuICAgICAgLy8gQ29udmVydCBldmVudCBoYW5kbGVyIG1ldGhvZCB0byBhIHN0cmluZyBjb250YWluaW5nIGl0cyBzb3VyY2UgY29kZSBmb3IgY29tcGFyaXNvblxyXG4gICAgICBbbWFwRW50cnlbMF0sIG1hcEVudHJ5WzFdID8gbWFwRW50cnlbMV0udG9TdHJpbmcoKSA6ICcnXVxyXG4gICAgKVxyXG4gICk7XHJcbn07XHJcblxyXG4vKipcclxuICogQ2hlY2sgaWYgdGhlIGNvbnRhaW5lciBlbGVtZW50LCBhY2Nlc3MgdG9rZW4sIGFuZCBlbWJlZCBVUkwgYXJlIGF2YWlsYWJsZS5cclxuICpcclxuICogQHBhcmFtIGNvbnRhaW5lclJlZiBSZWZlcmVuY2UgdG8gdGhlIGNvbnRhaW5lciBlbGVtZW50XHJcbiAqIEBwYXJhbSBlbWJlZENvbmZpZyBDb25maWd1cmF0aW9uIG9iamVjdCBmb3IgdGhlIGVtYmVkLCBjb250YWluaW5nIGFjY2VzcyB0b2tlbiBhbmQgZW1iZWQgVVJMXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgaXNFbWJlZFNldHVwVmFsaWQgPSAoY29udGFpbmVyUmVmOiBFbGVtZW50UmVmPEhUTUxEaXZFbGVtZW50PiwgZW1iZWRDb25maWc6IGFueSk6IGJvb2xlYW4gPT4ge1xyXG4gIHJldHVybiAhIWNvbnRhaW5lclJlZi5uYXRpdmVFbGVtZW50ICYmICEhZW1iZWRDb25maWcuYWNjZXNzVG9rZW4gJiYgISFlbWJlZENvbmZpZy5lbWJlZFVybDtcclxufVxyXG5cclxuLy8gU0RLIGluZm9ybWF0aW9uIHRvIGJlIHVzZWQgd2l0aCBzZXJ2aWNlIGluc3RhbmNlXHJcbmV4cG9ydCBjb25zdCBzZGtUeXBlID0gJ3Bvd2VyYmktY2xpZW50LWFuZ3VsYXInO1xyXG5leHBvcnQgY29uc3Qgc2RrV3JhcHBlclZlcnNpb24gPSAnNS4wLjAnO1xyXG4iXX0=