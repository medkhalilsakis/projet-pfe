{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ctrl/ngx-codemirror/fesm2022/ctrl-ngx-codemirror.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, ChangeDetectionStrategy, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nconst _c0 = [\"ref\"];\nfunction normalizeLineEndings(str) {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\r\\n|\\r/g, '\\n');\n}\nclass CodemirrorComponent {\n  _differs;\n  _ngZone;\n  /* class applied to the created textarea */\n  className = '';\n  /* name applied to the created textarea */\n  name = 'codemirror';\n  /* autofocus setting applied to the created textarea */\n  autoFocus = false;\n  /**\r\n   * set options for codemirror\r\n   * @link http://codemirror.net/doc/manual.html#config\r\n   */\n  set options(value) {\n    this._options = value;\n    if (!this._differ && value) {\n      this._differ = this._differs.find(value).create();\n    }\n  }\n  /* preserve previous scroll position after updating value */\n  preserveScrollPosition = false;\n  /* called when the text cursor is moved */\n  cursorActivity = new EventEmitter();\n  /* called when the editor is focused or loses focus */\n  focusChange = new EventEmitter();\n  /* called when the editor is scrolled */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  scroll = new EventEmitter();\n  /* called when file(s) are dropped */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  drop = new EventEmitter();\n  /* called when codeMirror instance is initiated on the component */\n  codeMirrorLoaded = new EventEmitter();\n  ref;\n  value = '';\n  disabled = false;\n  isFocused = false;\n  codeMirror;\n  /**\r\n   * either global variable or required library\r\n   */\n  _codeMirror;\n  _differ;\n  _options;\n  constructor(_differs, _ngZone) {\n    this._differs = _differs;\n    this._ngZone = _ngZone;\n  }\n  get codeMirrorGlobal() {\n    if (this._codeMirror) {\n      return this._codeMirror;\n    }\n    // in order to allow for universal rendering, we import Codemirror runtime with `require` to prevent node errors\n    this._codeMirror = typeof CodeMirror !== 'undefined' ? CodeMirror : import('codemirror');\n    return this._codeMirror;\n  }\n  ngAfterViewInit() {\n    this._ngZone.runOutsideAngular(async () => {\n      const codeMirrorObj = await this.codeMirrorGlobal;\n      const codeMirror = codeMirrorObj?.default ? codeMirrorObj.default : codeMirrorObj;\n      this.codeMirror = codeMirror.fromTextArea(this.ref.nativeElement, this._options);\n      this.codeMirror.on('cursorActivity', cm => this._ngZone.run(() => this.cursorActive(cm)));\n      this.codeMirror.on('scroll', this.scrollChanged.bind(this));\n      this.codeMirror.on('blur', () => this._ngZone.run(() => this.focusChanged(false)));\n      this.codeMirror.on('focus', () => this._ngZone.run(() => this.focusChanged(true)));\n      this.codeMirror.on('change', (cm, change) => this._ngZone.run(() => this.codemirrorValueChanged(cm, change)));\n      this.codeMirror.on('drop', (cm, e) => {\n        this._ngZone.run(() => this.dropFiles(cm, e));\n      });\n      this.codeMirror.setValue(this.value);\n      this.codeMirrorLoaded.emit(this);\n    });\n  }\n  ngDoCheck() {\n    if (!this._differ) {\n      return;\n    }\n    // check options have not changed\n    const changes = this._differ.diff(this._options);\n    if (changes) {\n      changes.forEachChangedItem(option => this.setOptionIfChanged(option.key, option.currentValue));\n      changes.forEachAddedItem(option => this.setOptionIfChanged(option.key, option.currentValue));\n      changes.forEachRemovedItem(option => this.setOptionIfChanged(option.key, option.currentValue));\n    }\n  }\n  ngOnDestroy() {\n    // is there a lighter-weight way to remove the cm instance?\n    if (this.codeMirror) {\n      this.codeMirror.toTextArea();\n    }\n  }\n  codemirrorValueChanged(cm, change) {\n    const cmVal = cm.getValue();\n    if (this.value !== cmVal) {\n      this.value = cmVal;\n      this.onChange(this.value);\n    }\n  }\n  setOptionIfChanged(optionName, newValue) {\n    if (!this.codeMirror) {\n      return;\n    }\n    // cast to any to handle strictly typed option names\n    // could possibly import settings strings available in the future\n    this.codeMirror.setOption(optionName, newValue);\n  }\n  focusChanged(focused) {\n    this.onTouched();\n    this.isFocused = focused;\n    this.focusChange.emit(focused);\n  }\n  scrollChanged(cm) {\n    this.scroll.emit(cm.getScrollInfo());\n  }\n  cursorActive(cm) {\n    this.cursorActivity.emit(cm);\n  }\n  dropFiles(cm, e) {\n    this.drop.emit([cm, e]);\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  writeValue(value) {\n    if (value === null || value === undefined) {\n      return;\n    }\n    if (!this.codeMirror) {\n      this.value = value;\n      return;\n    }\n    const cur = this.codeMirror.getValue();\n    if (value !== cur && normalizeLineEndings(cur) !== normalizeLineEndings(value)) {\n      this.value = value;\n      if (this.preserveScrollPosition) {\n        const prevScrollPosition = this.codeMirror.getScrollInfo();\n        this.codeMirror.setValue(this.value);\n        this.codeMirror.scrollTo(prevScrollPosition.left, prevScrollPosition.top);\n      } else {\n        this.codeMirror.setValue(this.value);\n      }\n    }\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this.setOptionIfChanged('readOnly', this.disabled);\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  onChange = _ => {};\n  /** Implemented as part of ControlValueAccessor. */\n  onTouched = () => {};\n  static ɵfac = function CodemirrorComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CodemirrorComponent)(i0.ɵɵdirectiveInject(i0.KeyValueDiffers), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CodemirrorComponent,\n    selectors: [[\"ngx-codemirror\"]],\n    viewQuery: function CodemirrorComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ref = _t.first);\n      }\n    },\n    inputs: {\n      className: \"className\",\n      name: \"name\",\n      autoFocus: \"autoFocus\",\n      options: \"options\",\n      preserveScrollPosition: \"preserveScrollPosition\"\n    },\n    outputs: {\n      cursorActivity: \"cursorActivity\",\n      focusChange: \"focusChange\",\n      scroll: \"scroll\",\n      drop: \"drop\",\n      codeMirrorLoaded: \"codeMirrorLoaded\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CodemirrorComponent),\n      multi: true\n    }])],\n    decls: 3,\n    vars: 7,\n    consts: [[\"ref\", \"\"], [\"autocomplete\", \"off\", 3, \"name\", \"autofocus\"]],\n    template: function CodemirrorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"textarea\", 1, 0);\n        i0.ɵɵtext(2, \"    \");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMapInterpolate1(\"ngx-codemirror \", ctx.className, \"\");\n        i0.ɵɵclassProp(\"ngx-codemirror--focused\", ctx.isFocused);\n        i0.ɵɵproperty(\"name\", ctx.name)(\"autofocus\", ctx.autoFocus);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CodemirrorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-codemirror',\n      template: `\n    <textarea\n      [name]=\"name\"\n      class=\"ngx-codemirror {{ className }}\"\n      [class.ngx-codemirror--focused]=\"isFocused\"\n      autocomplete=\"off\"\n      [autofocus]=\"autoFocus\"\n      #ref\n    >\n    </textarea>\n  `,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => CodemirrorComponent),\n        multi: true\n      }],\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.KeyValueDiffers\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    className: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    autoFocus: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    preserveScrollPosition: [{\n      type: Input\n    }],\n    cursorActivity: [{\n      type: Output\n    }],\n    focusChange: [{\n      type: Output\n    }],\n    scroll: [{\n      type: Output\n    }],\n    drop: [{\n      type: Output\n    }],\n    codeMirrorLoaded: [{\n      type: Output\n    }],\n    ref: [{\n      type: ViewChild,\n      args: ['ref']\n    }]\n  });\n})();\nclass CodemirrorModule {\n  static ɵfac = function CodemirrorModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CodemirrorModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CodemirrorModule,\n    declarations: [CodemirrorComponent],\n    exports: [CodemirrorComponent]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CodemirrorModule, [{\n    type: NgModule,\n    args: [{\n      exports: [CodemirrorComponent],\n      declarations: [CodemirrorComponent]\n    }]\n  }], null, null);\n})();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { CodemirrorComponent, CodemirrorModule };\n"],
  "mappings": "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",
  "names": []
}
